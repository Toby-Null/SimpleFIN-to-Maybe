<%- include('../partials/header') %>

<style>
  /* Toggle switch styling */
  .toggle-container {
    position: relative;
    display: inline-block;
    min-width: 85px;
    height: 28px;
  }
  
  .toggle-switch {
    opacity: 0;
    width: 0;
    height: 0;
    position: absolute;
  }
  
  .toggle-slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #6c757d;
    border-radius: 14px;
    transition: .4s;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 0.875rem;
    font-weight: 500;
  }
  
  .toggle-switch:checked + .toggle-slider {
    background-color: #28a745;
  }

  /* Ensure accordion arrows appear properly */
  .accordion-button::after {
    margin-left: 10px;
    flex-shrink: 0;
  }
  
  /* Custom width for accordion header content */
  .rule-content {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-right: 10px;
    pointer-events: none; /* Let clicks pass through to the accordion button */
  }
  
  /* Make toggle container respond to clicks */
  .toggle-container {
    pointer-events: auto; /* Override parent's pointer-events */
  }
</style>

<div class="row mb-4">
  <div class="col">
    <h1 class="display-6 mb-3">Transaction Rules</h1>
    <div class="d-flex justify-content-end">
      <a href="/rules/create" class="btn btn-primary rounded-pill">
        <i class="fas fa-plus me-1"></i> Create Rule
      </a>
    </div>
  </div>
</div>

<div class="card mb-4">
  <div class="card-header d-flex justify-content-between align-items-center">
    <h2 class="fs-4 mb-0">Rules</h2>
  </div>
  <div class="card-body p-0">
    <% if (rules && rules.length > 0) { %>
      <div class="accordion" id="rulesAccordion">
        <% rules.forEach((rule, index) => { %>
          <div class="accordion-item">
            <h2 class="accordion-header" id="heading<%= index %>">
              <button 
                class="accordion-button <%= index > 0 ? 'collapsed' : '' %>" 
                type="button" 
                data-bs-toggle="collapse" 
                data-bs-target="#collapse<%= index %>" 
                aria-expanded="<%= index === 0 ? 'true' : 'false' %>" 
                aria-controls="collapse<%= index %>"
              >
                <div class="rule-content">
                  <div>
                    <i class="fas fa-filter me-2 text-primary"></i>
                    <span class="fw-medium"><%= rule.name %></span>
                  </div>
                  
                  <div class="toggle-container" onclick="event.stopPropagation()">
                    <input 
                      type="checkbox" 
                      class="toggle-switch" 
                      id="toggle-<%= rule.id %>" 
                      <%= rule.enabled ? 'checked' : '' %>
                      onclick="toggleRule('<%= rule.id %>', <%= !rule.enabled %>); event.stopPropagation();"
                    >
                    <label class="toggle-slider" for="toggle-<%= rule.id %>">
                      <%= rule.enabled ? 'Enabled' : 'Disabled' %>
                    </label>
                  </div>
                </div>
              </button>
            </h2>
            <div 
              id="collapse<%= index %>" 
              class="accordion-collapse collapse <%= index === 0 ? 'show' : '' %>" 
              aria-labelledby="heading<%= index %>" 
              data-bs-parent="#rulesAccordion"
            >
              <div class="accordion-body bg-white">
                <div class="row mb-4">
                  <div class="col-md-6">
                    <div class="card">
                      <div class="card-header bg-light d-flex align-items-center">
                        <i class="fas fa-question-circle me-2 text-primary"></i>
                        <h5 class="mb-0 fs-5">Conditions</h5>
                      </div>
                      <div class="card-body">
                        <% if (rule.conditions && rule.conditions.length > 0) { %>
                          <ul class="list-group list-group-flush">
                            <% rule.conditions.forEach(condition => { %>
                              <li class="list-group-item border-0 ps-0 pe-0">
                                <div class="d-flex align-items-center">
                                  <span class="badge bg-light text-dark me-2">
                                    <%= condition.field === 'transaction_name' ? 'Name' : 'Amount' %>
                                  </span>
                                  <span class="text-muted me-2">
                                    <%= getOperatorDisplay(condition.operator) %>
                                  </span>
                                  <span class="fw-medium">
                                    "<%= condition.value %>"
                                  </span>
                                </div>
                              </li>
                            <% }); %>
                          </ul>
                        <% } else { %>
                          <div class="text-center text-muted py-3">
                            <i class="fas fa-exclamation-circle mb-2"></i>
                            <p>No conditions defined</p>
                          </div>
                        <% } %>
                      </div>
                    </div>
                  </div>
                  
                  <div class="col-md-6">
                    <div class="card">
                      <div class="card-header bg-light d-flex align-items-center">
                        <i class="fas fa-magic me-2 text-primary"></i>
                        <h5 class="mb-0 fs-5">Actions</h5>
                      </div>
                      <div class="card-body">
                        <% if (rule.actions && rule.actions.length > 0) { %>
                          <ul class="list-group list-group-flush">
                            <% rule.actions.forEach(action => { %>
                              <li class="list-group-item border-0 ps-0 pe-0">
                                <div class="d-flex align-items-center">
                                  <span class="badge <%= action.action_type === 'set_transaction_category' ? 'bg-success text-white' : 'bg-info text-white' %> me-2">
                                    <%= action.action_type === 'set_transaction_category' ? 'Category' : 'Tag' %>
                                  </span>
                                  <i class="fas fa-arrow-right text-muted me-2"></i>
                                  <span class="fw-medium">
                                    <%= action.category_name || action.action_value %>
                                  </span>
                                </div>
                              </li>
                            <% }); %>
                          </ul>
                        <% } else { %>
                          <div class="text-center text-muted py-3">
                            <i class="fas fa-exclamation-circle mb-2"></i>
                            <p>No actions defined</p>
                          </div>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div class="d-flex justify-content-end">
                  <a href="/rules/<%= rule.id %>/edit" class="btn btn-primary rounded-pill me-2">
                    <i class="fas fa-edit me-1"></i> Edit
                  </a>
                  <form action="/rules/<%= rule.id %>/delete" method="POST" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this rule?')">
                    <button type="submit" class="btn btn-outline-danger rounded-pill">
                      <i class="fas fa-trash me-1"></i> Delete
                    </button>
                  </form>
                </div>
              </div>
            </div>
          </div>
        <% }); %>
      </div>
    <% } else { %>
      <div class="text-center py-5">
        <div class="mb-3">
          <i class="fas fa-magic fa-3x text-muted"></i>
        </div>
        <h3 class="fs-5">No transaction rules found</h3>
        <p class="text-muted mb-4">Rules help you automatically categorize transactions during sync</p>
        <a href="/rules/create" class="btn btn-primary rounded-pill">
          <i class="fas fa-plus me-1"></i> Create your first rule
        </a>
      </div>
    <% } %>
  </div>
</div>

<form id="toggleRuleForm" method="POST" style="display: none;">
  <input type="hidden" name="enabled" id="toggleRuleEnabled">
</form>

<script>
  function toggleRule(ruleId, enable) {
    // Prevent toggle click from triggering accordion 
    event.stopPropagation();
    
    const form = document.getElementById('toggleRuleForm');
    form.action = `/rules/${ruleId}/toggle`;
    document.getElementById('toggleRuleEnabled').value = enable;
    form.submit();
  }
  
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.toggle-container').forEach(container => {
      container.addEventListener('click', function(e) {
        e.stopPropagation();
      });
    });
    
    document.querySelectorAll('.accordion-button').forEach(button => {
      button.addEventListener('click', function(e) {
        const targetId = this.getAttribute('data-bs-target');
        if (!targetId) return;
        
        const targetCollapse = document.querySelector(targetId);
        if (!targetCollapse) return;
        
        // Check if it's currently shown or hidden
        const isCurrentlyShown = targetCollapse.classList.contains('show');
        
        // First, close all open accordions
        document.querySelectorAll('.accordion-collapse.show').forEach(item => {
          if (item.id !== targetCollapse.id) {
            item.classList.remove('show');
            const itemHeader = document.querySelector(`[data-bs-target="#${item.id}"]`);
            if (itemHeader) {
              itemHeader.classList.add('collapsed');
              itemHeader.setAttribute('aria-expanded', 'false');
            }
          }
        });
        
        if (isCurrentlyShown) {
          // Close it
          targetCollapse.classList.remove('show');
          this.classList.add('collapsed');
          this.setAttribute('aria-expanded', 'false');
        } else {
          // Open it
          targetCollapse.classList.add('show');
          this.classList.remove('collapsed');
          this.setAttribute('aria-expanded', 'true');
        }
        
        // Prevent default to avoid conflicts
        e.preventDefault();
      });
    });
  });
  
  function getOperatorDisplay(operator) {
    switch (operator) {
      case 'contains':
      case 'like':
        return 'contains';
      case '=':
      case 'equals':
        return 'equals';
      case '>':
      case 'greater_than':
        return 'is greater than';
      case '>=':
      case 'greater_than_or_equal':
        return 'is greater than or equal to';
      case '<':
      case 'less_than':
        return 'is less than';
      case '<=':
      case 'less_than_or_equal':
        return 'is less than or equal to';
      default:
        return operator;
    }
  }
</script>

<%- include('../partials/footer') %>